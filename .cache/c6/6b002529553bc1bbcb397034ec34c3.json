{"id":"src/components/core/TextManager.js","dependencies":[{"name":"C:\\POCs\\XR\\badri_xr_first3mesh\\package.json","includedInParent":true,"mtime":1655051947715},{"name":"../../content/MSDFText.js","loc":{"line":1,"column":21,"index":21},"parent":"C:\\POCs\\XR\\badri_xr_first3mesh\\src\\components\\core\\TextManager.js","resolved":"C:\\POCs\\XR\\badri_xr_first3mesh\\src\\content\\MSDFText.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = TextManager;\n\nvar _MSDFText = _interopRequireDefault(require(\"../../content/MSDFText.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n\nJob:\n- Routing the request for Text dimensions and Text creation depending on Text type.\n\nKnows:\n- this component's textType attribute\n\nNote:\nOnly one Text type is natively supported by the library at the moment,\nbut the architecture allows you to easily stick in your custom Text type.\nMore information here :\nhttps://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type\n\n */\nfunction TextManager(Base) {\n  return /*#__PURE__*/function (_Base) {\n    _inherits(TextManager, _Base);\n\n    var _super = _createSuper(TextManager);\n\n    function TextManager() {\n      _classCallCheck(this, TextManager);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(TextManager, [{\n      key: \"createText\",\n      value: function createText() {\n        var _this = this;\n\n        var component = this;\n\n        var mesh = function () {\n          switch (_this.getTextType()) {\n            case 'MSDF':\n              return _MSDFText.default.buildText.call(_this);\n\n            default:\n              console.warn(\"'\".concat(_this.getTextType(), \"' is not a supported text type.\\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type\"));\n              break;\n          }\n        }();\n\n        mesh.renderOrder = Infinity; // This is for hiddenOverflow to work\n\n        mesh.onBeforeRender = function () {\n          if (component.updateClippingPlanes) {\n            component.updateClippingPlanes();\n          }\n        };\n\n        return mesh;\n      }\n      /**\n       * Called by Text to get the dimensions of a particular glyph,\n       * in order for InlineManager to compute its position\n       */\n\n    }, {\n      key: \"getGlyphDimensions\",\n      value: function getGlyphDimensions(options) {\n        switch (options.textType) {\n          case 'MSDF':\n            return _MSDFText.default.getGlyphDimensions(options);\n\n          default:\n            console.warn(\"'\".concat(options.textType, \"' is not a supported text type.\\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type\"));\n            break;\n        }\n      }\n      /**\n       * Called by Text to get the amount of kerning for pair of glyph\n       * @param textType\n       * @param font\n       * @param glyphPair\n       * @returns {number}\n       */\n\n    }, {\n      key: \"getGlyphPairKerning\",\n      value: function getGlyphPairKerning(textType, font, glyphPair) {\n        switch (textType) {\n          case 'MSDF':\n            return _MSDFText.default.getGlyphPairKerning(font, glyphPair);\n\n          default:\n            console.warn(\"'\".concat(textType, \"' is not a supported text type.\\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type\"));\n            break;\n        }\n      }\n    }]);\n\n    return TextManager;\n  }(Base);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/components/core/TextManager.js","original":{"line":1,"column":0}},{"generated":{"line":34,"column":0},"source":"src/components/core/TextManager.js","original":{"line":3,"column":0}},{"generated":{"line":35,"column":0},"source":"src/components/core/TextManager.js","original":{"line":4,"column":0}},{"generated":{"line":36,"column":0},"source":"src/components/core/TextManager.js","original":{"line":5,"column":0}},{"generated":{"line":37,"column":0},"source":"src/components/core/TextManager.js","original":{"line":6,"column":0}},{"generated":{"line":38,"column":0},"source":"src/components/core/TextManager.js","original":{"line":7,"column":0}},{"generated":{"line":39,"column":0},"source":"src/components/core/TextManager.js","original":{"line":8,"column":0}},{"generated":{"line":40,"column":0},"source":"src/components/core/TextManager.js","original":{"line":9,"column":0}},{"generated":{"line":41,"column":0},"source":"src/components/core/TextManager.js","original":{"line":10,"column":0}},{"generated":{"line":42,"column":0},"source":"src/components/core/TextManager.js","original":{"line":11,"column":0}},{"generated":{"line":43,"column":0},"source":"src/components/core/TextManager.js","original":{"line":12,"column":0}},{"generated":{"line":44,"column":0},"source":"src/components/core/TextManager.js","original":{"line":13,"column":0}},{"generated":{"line":45,"column":0},"source":"src/components/core/TextManager.js","original":{"line":14,"column":0}},{"generated":{"line":46,"column":0},"source":"src/components/core/TextManager.js","original":{"line":15,"column":0}},{"generated":{"line":47,"column":0},"source":"src/components/core/TextManager.js","original":{"line":16,"column":0}},{"generated":{"line":48,"column":0},"source":"src/components/core/TextManager.js","original":{"line":17,"column":0}},{"generated":{"line":49,"column":0},"source":"src/components/core/TextManager.js","original":{"line":18,"column":15}},{"generated":{"line":49,"column":9},"source":"src/components/core/TextManager.js","original":{"line":18,"column":24},"name":"TextManager"},{"generated":{"line":49,"column":20},"source":"src/components/core/TextManager.js","original":{"line":18,"column":15}},{"generated":{"line":49,"column":21},"source":"src/components/core/TextManager.js","original":{"line":18,"column":37},"name":"Base"},{"generated":{"line":49,"column":25},"source":"src/components/core/TextManager.js","original":{"line":18,"column":15}},{"generated":{"line":49,"column":27},"source":"src/components/core/TextManager.js","original":{"line":18,"column":44}},{"generated":{"line":50,"column":2},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":51,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":53,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":55,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":56,"column":6},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":58,"column":6},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":59,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":61,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":62,"column":6},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":63,"column":6},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":63,"column":13},"source":"src/components/core/TextManager.js","original":{"line":22,"column":2}},{"generated":{"line":63,"column":35},"source":"src/components/core/TextManager.js","original":{"line":22,"column":15}},{"generated":{"line":64,"column":8},"source":"src/components/core/TextManager.js","original":{"line":22,"column":15}},{"generated":{"line":66,"column":8},"source":"src/components/core/TextManager.js","original":{"line":24,"column":3}},{"generated":{"line":66,"column":12},"source":"src/components/core/TextManager.js","original":{"line":24,"column":9},"name":"component"},{"generated":{"line":66,"column":21},"source":"src/components/core/TextManager.js","original":{"line":24,"column":18}},{"generated":{"line":66,"column":24},"source":"src/components/core/TextManager.js","original":{"line":24,"column":21}},{"generated":{"line":66,"column":28},"source":"src/components/core/TextManager.js","original":{"line":24,"column":3}},{"generated":{"line":68,"column":8},"source":"src/components/core/TextManager.js","original":{"line":26,"column":3}},{"generated":{"line":68,"column":12},"source":"src/components/core/TextManager.js","original":{"line":26,"column":9},"name":"mesh"},{"generated":{"line":68,"column":16},"source":"src/components/core/TextManager.js","original":{"line":26,"column":13}},{"generated":{"line":68,"column":19},"source":"src/components/core/TextManager.js","original":{"line":26,"column":18}},{"generated":{"line":68,"column":31},"source":"src/components/core/TextManager.js","original":{"line":26,"column":24}},{"generated":{"line":69,"column":10},"source":"src/components/core/TextManager.js","original":{"line":28,"column":4}},{"generated":{"line":69,"column":18},"source":"src/components/core/TextManager.js","original":{"line":28,"column":13}},{"generated":{"line":69,"column":23},"source":"src/components/core/TextManager.js","original":{"line":28,"column":17}},{"generated":{"line":69,"column":24},"source":"src/components/core/TextManager.js","original":{"line":28,"column":18},"name":"getTextType"},{"generated":{"line":69,"column":35},"source":"src/components/core/TextManager.js","original":{"line":28,"column":13}},{"generated":{"line":69,"column":37},"source":"src/components/core/TextManager.js","original":{"line":28,"column":4}},{"generated":{"line":70,"column":12},"source":"src/components/core/TextManager.js","original":{"line":30,"column":5}},{"generated":{"line":70,"column":17},"source":"src/components/core/TextManager.js","original":{"line":30,"column":10}},{"generated":{"line":70,"column":23},"source":"src/components/core/TextManager.js","original":{"line":30,"column":5}},{"generated":{"line":71,"column":14},"source":"src/components/core/TextManager.js","original":{"line":31,"column":6}},{"generated":{"line":71,"column":21},"source":"src/components/core/TextManager.js","original":{"line":31,"column":13},"name":"MSDFText"},{"generated":{"line":71,"column":38},"source":"src/components/core/TextManager.js","original":{"line":31,"column":13}},{"generated":{"line":71,"column":39},"source":"src/components/core/TextManager.js","original":{"line":31,"column":22},"name":"buildText"},{"generated":{"line":71,"column":48},"source":"src/components/core/TextManager.js","original":{"line":31,"column":13}},{"generated":{"line":71,"column":49},"source":"src/components/core/TextManager.js","original":{"line":31,"column":32},"name":"call"},{"generated":{"line":71,"column":53},"source":"src/components/core/TextManager.js","original":{"line":31,"column":13}},{"generated":{"line":71,"column":54},"source":"src/components/core/TextManager.js","original":{"line":31,"column":38}},{"generated":{"line":71,"column":59},"source":"src/components/core/TextManager.js","original":{"line":31,"column":13}},{"generated":{"line":71,"column":60},"source":"src/components/core/TextManager.js","original":{"line":31,"column":6}},{"generated":{"line":73,"column":12},"source":"src/components/core/TextManager.js","original":{"line":33,"column":5}},{"generated":{"line":74,"column":14},"source":"src/components/core/TextManager.js","original":{"line":34,"column":6},"name":"console"},{"generated":{"line":74,"column":21},"source":"src/components/core/TextManager.js","original":{"line":34,"column":13}},{"generated":{"line":74,"column":22},"source":"src/components/core/TextManager.js","original":{"line":34,"column":14},"name":"warn"},{"generated":{"line":74,"column":26},"source":"src/components/core/TextManager.js","original":{"line":34,"column":6}},{"generated":{"line":74,"column":38},"source":"src/components/core/TextManager.js","original":{"line":34,"column":24}},{"generated":{"line":74,"column":43},"source":"src/components/core/TextManager.js","original":{"line":34,"column":28}},{"generated":{"line":74,"column":44},"source":"src/components/core/TextManager.js","original":{"line":34,"column":29},"name":"getTextType"},{"generated":{"line":74,"column":55},"source":"src/components/core/TextManager.js","original":{"line":34,"column":24}},{"generated":{"line":74,"column":57},"source":"src/components/core/TextManager.js","original":{"line":34,"column":6}},{"generated":{"line":75,"column":14},"source":"src/components/core/TextManager.js","original":{"line":35,"column":6}},{"generated":{"line":76,"column":10},"source":"src/components/core/TextManager.js","original":{"line":28,"column":4}},{"generated":{"line":77,"column":8},"source":"src/components/core/TextManager.js","original":{"line":39,"column":4}},{"generated":{"line":77,"column":9},"source":"src/components/core/TextManager.js","original":{"line":26,"column":16}},{"generated":{"line":77,"column":11},"source":"src/components/core/TextManager.js","original":{"line":26,"column":3}},{"generated":{"line":79,"column":8},"source":"src/components/core/TextManager.js","original":{"line":41,"column":3},"name":"mesh"},{"generated":{"line":79,"column":12},"source":"src/components/core/TextManager.js","original":{"line":41,"column":7}},{"generated":{"line":79,"column":13},"source":"src/components/core/TextManager.js","original":{"line":41,"column":8},"name":"renderOrder"},{"generated":{"line":79,"column":24},"source":"src/components/core/TextManager.js","original":{"line":41,"column":3}},{"generated":{"line":79,"column":27},"source":"src/components/core/TextManager.js","original":{"line":41,"column":22},"name":"Infinity"},{"generated":{"line":79,"column":35},"source":"src/components/core/TextManager.js","original":{"line":41,"column":3}},{"generated":{"line":79,"column":36},"source":"src/components/core/TextManager.js","original":{"line":22,"column":15}},{"generated":{"line":79,"column":37},"source":"src/components/core/TextManager.js","original":{"line":43,"column":3}},{"generated":{"line":81,"column":8},"source":"src/components/core/TextManager.js","original":{"line":44,"column":3},"name":"mesh"},{"generated":{"line":81,"column":12},"source":"src/components/core/TextManager.js","original":{"line":44,"column":7}},{"generated":{"line":81,"column":13},"source":"src/components/core/TextManager.js","original":{"line":44,"column":8},"name":"onBeforeRender"},{"generated":{"line":81,"column":27},"source":"src/components/core/TextManager.js","original":{"line":44,"column":3}},{"generated":{"line":81,"column":30},"source":"src/components/core/TextManager.js","original":{"line":44,"column":25}},{"generated":{"line":81,"column":42},"source":"src/components/core/TextManager.js","original":{"line":44,"column":37}},{"generated":{"line":82,"column":10},"source":"src/components/core/TextManager.js","original":{"line":46,"column":4}},{"generated":{"line":82,"column":14},"source":"src/components/core/TextManager.js","original":{"line":46,"column":9},"name":"component"},{"generated":{"line":82,"column":23},"source":"src/components/core/TextManager.js","original":{"line":46,"column":18}},{"generated":{"line":82,"column":24},"source":"src/components/core/TextManager.js","original":{"line":46,"column":19},"name":"updateClippingPlanes"},{"generated":{"line":82,"column":44},"source":"src/components/core/TextManager.js","original":{"line":46,"column":4}},{"generated":{"line":82,"column":46},"source":"src/components/core/TextManager.js","original":{"line":46,"column":42}},{"generated":{"line":83,"column":12},"source":"src/components/core/TextManager.js","original":{"line":48,"column":5},"name":"component"},{"generated":{"line":83,"column":21},"source":"src/components/core/TextManager.js","original":{"line":48,"column":14}},{"generated":{"line":83,"column":22},"source":"src/components/core/TextManager.js","original":{"line":48,"column":15},"name":"updateClippingPlanes"},{"generated":{"line":83,"column":42},"source":"src/components/core/TextManager.js","original":{"line":48,"column":5}},{"generated":{"line":84,"column":10},"source":"src/components/core/TextManager.js","original":{"line":50,"column":5}},{"generated":{"line":85,"column":8},"source":"src/components/core/TextManager.js","original":{"line":52,"column":4}},{"generated":{"line":85,"column":9},"source":"src/components/core/TextManager.js","original":{"line":44,"column":3}},{"generated":{"line":87,"column":8},"source":"src/components/core/TextManager.js","original":{"line":54,"column":3}},{"generated":{"line":87,"column":15},"source":"src/components/core/TextManager.js","original":{"line":54,"column":10},"name":"mesh"},{"generated":{"line":87,"column":19},"source":"src/components/core/TextManager.js","original":{"line":54,"column":3}},{"generated":{"line":88,"column":6},"source":"src/components/core/TextManager.js","original":{"line":56,"column":3}},{"generated":{"line":89,"column":6},"source":"src/components/core/TextManager.js","original":{"line":58,"column":2}},{"generated":{"line":90,"column":0},"source":"src/components/core/TextManager.js","original":{"line":59,"column":0}},{"generated":{"line":91,"column":0},"source":"src/components/core/TextManager.js","original":{"line":60,"column":0}},{"generated":{"line":92,"column":0},"source":"src/components/core/TextManager.js","original":{"line":61,"column":0}},{"generated":{"line":94,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":95,"column":6},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":96,"column":6},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":96,"column":13},"source":"src/components/core/TextManager.js","original":{"line":62,"column":2}},{"generated":{"line":96,"column":41},"source":"src/components/core/TextManager.js","original":{"line":62,"column":22},"name":"options"},{"generated":{"line":96,"column":48},"source":"src/components/core/TextManager.js","original":{"line":62,"column":2}},{"generated":{"line":96,"column":50},"source":"src/components/core/TextManager.js","original":{"line":62,"column":32}},{"generated":{"line":97,"column":8},"source":"src/components/core/TextManager.js","original":{"line":64,"column":3}},{"generated":{"line":97,"column":16},"source":"src/components/core/TextManager.js","original":{"line":64,"column":12},"name":"options"},{"generated":{"line":97,"column":23},"source":"src/components/core/TextManager.js","original":{"line":64,"column":19}},{"generated":{"line":97,"column":24},"source":"src/components/core/TextManager.js","original":{"line":64,"column":20},"name":"textType"},{"generated":{"line":97,"column":32},"source":"src/components/core/TextManager.js","original":{"line":64,"column":3}},{"generated":{"line":98,"column":10},"source":"src/components/core/TextManager.js","original":{"line":66,"column":4}},{"generated":{"line":98,"column":15},"source":"src/components/core/TextManager.js","original":{"line":66,"column":9}},{"generated":{"line":98,"column":21},"source":"src/components/core/TextManager.js","original":{"line":66,"column":4}},{"generated":{"line":99,"column":12},"source":"src/components/core/TextManager.js","original":{"line":68,"column":5}},{"generated":{"line":99,"column":19},"source":"src/components/core/TextManager.js","original":{"line":68,"column":12},"name":"MSDFText"},{"generated":{"line":99,"column":36},"source":"src/components/core/TextManager.js","original":{"line":68,"column":12}},{"generated":{"line":99,"column":37},"source":"src/components/core/TextManager.js","original":{"line":68,"column":21},"name":"getGlyphDimensions"},{"generated":{"line":99,"column":55},"source":"src/components/core/TextManager.js","original":{"line":68,"column":12}},{"generated":{"line":99,"column":56},"source":"src/components/core/TextManager.js","original":{"line":68,"column":41},"name":"options"},{"generated":{"line":99,"column":63},"source":"src/components/core/TextManager.js","original":{"line":68,"column":12}},{"generated":{"line":99,"column":64},"source":"src/components/core/TextManager.js","original":{"line":68,"column":5}},{"generated":{"line":101,"column":10},"source":"src/components/core/TextManager.js","original":{"line":70,"column":4}},{"generated":{"line":102,"column":12},"source":"src/components/core/TextManager.js","original":{"line":71,"column":5},"name":"console"},{"generated":{"line":102,"column":19},"source":"src/components/core/TextManager.js","original":{"line":71,"column":12}},{"generated":{"line":102,"column":20},"source":"src/components/core/TextManager.js","original":{"line":71,"column":13},"name":"warn"},{"generated":{"line":102,"column":24},"source":"src/components/core/TextManager.js","original":{"line":71,"column":5}},{"generated":{"line":102,"column":36},"source":"src/components/core/TextManager.js","original":{"line":71,"column":23},"name":"options"},{"generated":{"line":102,"column":43},"source":"src/components/core/TextManager.js","original":{"line":71,"column":30}},{"generated":{"line":102,"column":44},"source":"src/components/core/TextManager.js","original":{"line":71,"column":31},"name":"textType"},{"generated":{"line":102,"column":52},"source":"src/components/core/TextManager.js","original":{"line":71,"column":5}},{"generated":{"line":103,"column":12},"source":"src/components/core/TextManager.js","original":{"line":72,"column":5}},{"generated":{"line":104,"column":8},"source":"src/components/core/TextManager.js","original":{"line":64,"column":3}},{"generated":{"line":105,"column":6},"source":"src/components/core/TextManager.js","original":{"line":76,"column":3}},{"generated":{"line":106,"column":6},"source":"src/components/core/TextManager.js","original":{"line":79,"column":2}},{"generated":{"line":107,"column":0},"source":"src/components/core/TextManager.js","original":{"line":80,"column":0}},{"generated":{"line":108,"column":0},"source":"src/components/core/TextManager.js","original":{"line":81,"column":0}},{"generated":{"line":109,"column":0},"source":"src/components/core/TextManager.js","original":{"line":82,"column":0}},{"generated":{"line":110,"column":0},"source":"src/components/core/TextManager.js","original":{"line":83,"column":0}},{"generated":{"line":111,"column":0},"source":"src/components/core/TextManager.js","original":{"line":84,"column":0}},{"generated":{"line":112,"column":0},"source":"src/components/core/TextManager.js","original":{"line":85,"column":0}},{"generated":{"line":114,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":115,"column":6},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":116,"column":6},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":116,"column":13},"source":"src/components/core/TextManager.js","original":{"line":86,"column":2}},{"generated":{"line":116,"column":42},"source":"src/components/core/TextManager.js","original":{"line":86,"column":23},"name":"textType"},{"generated":{"line":116,"column":50},"source":"src/components/core/TextManager.js","original":{"line":86,"column":2}},{"generated":{"line":116,"column":52},"source":"src/components/core/TextManager.js","original":{"line":86,"column":33},"name":"font"},{"generated":{"line":116,"column":56},"source":"src/components/core/TextManager.js","original":{"line":86,"column":2}},{"generated":{"line":116,"column":58},"source":"src/components/core/TextManager.js","original":{"line":86,"column":39},"name":"glyphPair"},{"generated":{"line":116,"column":67},"source":"src/components/core/TextManager.js","original":{"line":86,"column":2}},{"generated":{"line":116,"column":69},"source":"src/components/core/TextManager.js","original":{"line":86,"column":51}},{"generated":{"line":117,"column":8},"source":"src/components/core/TextManager.js","original":{"line":88,"column":3}},{"generated":{"line":117,"column":16},"source":"src/components/core/TextManager.js","original":{"line":88,"column":12},"name":"textType"},{"generated":{"line":117,"column":24},"source":"src/components/core/TextManager.js","original":{"line":88,"column":3}},{"generated":{"line":118,"column":10},"source":"src/components/core/TextManager.js","original":{"line":90,"column":4}},{"generated":{"line":118,"column":15},"source":"src/components/core/TextManager.js","original":{"line":90,"column":9}},{"generated":{"line":118,"column":21},"source":"src/components/core/TextManager.js","original":{"line":90,"column":4}},{"generated":{"line":119,"column":12},"source":"src/components/core/TextManager.js","original":{"line":92,"column":5}},{"generated":{"line":119,"column":19},"source":"src/components/core/TextManager.js","original":{"line":92,"column":12},"name":"MSDFText"},{"generated":{"line":119,"column":36},"source":"src/components/core/TextManager.js","original":{"line":92,"column":12}},{"generated":{"line":119,"column":37},"source":"src/components/core/TextManager.js","original":{"line":92,"column":21},"name":"getGlyphPairKerning"},{"generated":{"line":119,"column":56},"source":"src/components/core/TextManager.js","original":{"line":92,"column":12}},{"generated":{"line":119,"column":57},"source":"src/components/core/TextManager.js","original":{"line":92,"column":42},"name":"font"},{"generated":{"line":119,"column":61},"source":"src/components/core/TextManager.js","original":{"line":92,"column":12}},{"generated":{"line":119,"column":63},"source":"src/components/core/TextManager.js","original":{"line":92,"column":48},"name":"glyphPair"},{"generated":{"line":119,"column":72},"source":"src/components/core/TextManager.js","original":{"line":92,"column":12}},{"generated":{"line":119,"column":73},"source":"src/components/core/TextManager.js","original":{"line":92,"column":5}},{"generated":{"line":121,"column":10},"source":"src/components/core/TextManager.js","original":{"line":94,"column":4}},{"generated":{"line":122,"column":12},"source":"src/components/core/TextManager.js","original":{"line":95,"column":5},"name":"console"},{"generated":{"line":122,"column":19},"source":"src/components/core/TextManager.js","original":{"line":95,"column":12}},{"generated":{"line":122,"column":20},"source":"src/components/core/TextManager.js","original":{"line":95,"column":13},"name":"warn"},{"generated":{"line":122,"column":24},"source":"src/components/core/TextManager.js","original":{"line":95,"column":5}},{"generated":{"line":122,"column":36},"source":"src/components/core/TextManager.js","original":{"line":95,"column":23},"name":"textType"},{"generated":{"line":122,"column":44},"source":"src/components/core/TextManager.js","original":{"line":95,"column":5}},{"generated":{"line":123,"column":12},"source":"src/components/core/TextManager.js","original":{"line":96,"column":5}},{"generated":{"line":124,"column":8},"source":"src/components/core/TextManager.js","original":{"line":88,"column":3}},{"generated":{"line":125,"column":6},"source":"src/components/core/TextManager.js","original":{"line":100,"column":3}},{"generated":{"line":126,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":128,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":129,"column":2},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":129,"column":4},"source":"src/components/core/TextManager.js","original":{"line":20,"column":34},"name":"Base"},{"generated":{"line":129,"column":8},"source":"src/components/core/TextManager.js","original":{"line":20,"column":1}},{"generated":{"line":130,"column":0},"source":"src/components/core/TextManager.js","original":{"line":103,"column":1}}],"sources":{"src/components/core/TextManager.js":"import MSDFText from '../../content/MSDFText.js';\n\n/**\n\nJob:\n- Routing the request for Text dimensions and Text creation depending on Text type.\n\nKnows:\n- this component's textType attribute\n\nNote:\nOnly one Text type is natively supported by the library at the moment,\nbut the architecture allows you to easily stick in your custom Text type.\nMore information here :\nhttps://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type\n\n */\nexport default function TextManager( Base ) {\n\n\treturn class TextManager extends Base {\n\n\t\tcreateText() {\n\n\t\t\tconst component = this;\n\n\t\t\tconst mesh = ( () => {\n\n\t\t\t\tswitch ( this.getTextType() ) {\n\n\t\t\t\t\tcase 'MSDF' :\n\t\t\t\t\t\treturn MSDFText.buildText.call( this );\n\n\t\t\t\t\tdefault :\n\t\t\t\t\t\tconsole.warn( `'${this.getTextType()}' is not a supported text type.\\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type` );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} )();\n\n\t\t\tmesh.renderOrder = Infinity;\n\n\t\t\t// This is for hiddenOverflow to work\n\t\t\tmesh.onBeforeRender = function () {\n\n\t\t\t\tif ( component.updateClippingPlanes ) {\n\n\t\t\t\t\tcomponent.updateClippingPlanes();\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\treturn mesh;\n\n\t\t}\n\n\t\t/**\n\t\t * Called by Text to get the dimensions of a particular glyph,\n\t\t * in order for InlineManager to compute its position\n\t\t */\n\t\tgetGlyphDimensions( options ) {\n\n\t\t\tswitch ( options.textType ) {\n\n\t\t\t\tcase 'MSDF' :\n\n\t\t\t\t\treturn MSDFText.getGlyphDimensions( options );\n\n\t\t\t\tdefault :\n\t\t\t\t\tconsole.warn( `'${options.textType}' is not a supported text type.\\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type` );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t/**\n\t\t * Called by Text to get the amount of kerning for pair of glyph\n\t\t * @param textType\n\t\t * @param font\n\t\t * @param glyphPair\n\t\t * @returns {number}\n\t\t */\n\t\tgetGlyphPairKerning( textType, font, glyphPair ) {\n\n\t\t\tswitch ( textType ) {\n\n\t\t\t\tcase 'MSDF' :\n\n\t\t\t\t\treturn MSDFText.getGlyphPairKerning( font, glyphPair );\n\n\t\t\t\tdefault :\n\t\t\t\t\tconsole.warn( `'${textType}' is not a supported text type.\\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type` );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\t};\n\n}\n"},"lineCount":null}},"error":null,"hash":"bfd42a595008319874bf28c327296fb7","cacheData":{"env":{}}}